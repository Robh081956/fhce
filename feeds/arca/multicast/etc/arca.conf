#  Copyright (C) 2008, 2009, 2010 The Collaborative Software Foundation.
#
#  This file is part of FeedHandlers (FH).
#
#  FH is free software: you can redistribute it and/or modify it under the terms of the
#  GNU Lesser General Public License as published by the Free Software Foundation, either version 3
#  of the License, or (at your option) any later version.
#
#  FH is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
#  even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with FH.  If not, see <http://www.gnu.org/licenses/>.


# Arca Book and Arca Trade share a common configuration format
#  This implies that there are configuration parameters that may not apply to one or the other
#  The most significant example is "fast" encoding which is not supported by Arca Trade
#
# Default values - There are none. If a parameter is not defined in the configuration file
#  its value is NOT DEFINED and if it is a required parameter it may cause the feed handler
#  to not start. The high growth rate of volume on the supported exchanges means that it is
#  dangerous to design in baseline default values or configurations.
#
# MISSING OR IMPERFECT Configuration will be detected during process initialization and may result
#  in the process not starting. The cause is usually logged in the log file.
#
# ------------------------------------------------------------------------------
# Logging Configuration - Generic to most feed handlers and cache
# ------------------------------------------------------------------------------
#
# --- Config parameters --------------------------------------------------------
#
# CONSOLE  - Redirect log to stdout
#
# --- Logging Classes ----------------------------------------------------------
#
# CSI      - Default Class
# NET      - Networking layer
# LH       - Line handling layer
# MGMT     - Management layer
# CTRL     - Messaging Control layer
# PUB      - Messaging Publication layer
#
# --- Logging Levels -----------------------------------------------------------
#
# ERR      - Errors
# WARN     - Warnings
# INFO     - Information logging
# DIAG     - Diagnostics
# STATE    - State transitions
# VSTATE   - Verbose State transitions
# STATS    - Statistics logging

log = {
    default = WARN
}

# ------------------------------------------------------------------------------
# Plugin configuration
# ------------------------------------------------------------------------------

plugin.dir = /opt/csi/fh/arca/plugins

# ------------------------------------------------------------------------------
# ARCA Book Configuration
#   Arca Book may be configured for all lines resident on a single server or
#   distributed over multiple servers. In the later case, each server will have
#   a configuration file for the configuration on that server
#
#   On a server, lines may be handled by a single process or multiple processes
#   The example configuration below supports all Arca Book main feed lines on a single server
#   with 4 processes. Each process happens to support a complete exchange for its main
#   lines. A similar configuration file on another server could support all the periodic refresh
#   lines. 22 Processes each serving a single line would also be a valid configuration.
#   CSI does not recommend any specific configuration as being better than another.
# ------------------------------------------------------------------------------

arca = {
    options = {
        jitter_stats    = no
    }
    source_id ="abcdefghijklmnpqrstuv"
    #source_id is not currently used by any arca feed handlers
    # It is a requirement for retransmission of missing packets or requesting refresh of books
    # It may be supported at some point in the future.
    # A source ID is issued by the exchange for each authorized user of the exchange.
    # Having a source ID is required to be able to access the feed

    # MAP processes to lines & cores
    #   lines is the lines supported by this process (line is defined below)
    #     line names must match to that used in the line configuration section
    #   cpu is a core associated with the process (DEFAULTS to 0)
    #   index is process identification within an Arca feed handler context
    #   max_sessions should be >= number of lines for process
    #     there are rare occasions when a line is restarted during a trading session. Each such
    #     restart will use a different session identification. During a trading day, a line may
    #     have multiple trading sessions for extended hours trading or for mock trading sessions.
    #   max_symbols >= the number of symbols defined for any line
    #      there will be a symbol table per session and each will support max_symbols
    #   max_firms >= the number of firms
    #   max_orders >= the maximum number of orders outstanding per process
    #     Each session has an order table of size max_orders to aid differential publication.
    #        It has to be sized to be larger than the maximum number of outstanding orders at any
    #        point during a session. This will vary for each exchange and line and is also growing
    #        over time.
    #   The values used in this example were adequate on January 1, 2009 but there is no assurance
    #     that they will be adequate in the future.
    # process names are used by the fh manager process when the processes are created and are used
    #     within its CLI and must match to those of its configuration files
    processes = {
       fhArcaListed = {
           lines        = ("ARCA_LISTED_AC", "ARCA_LISTED_DJ", "ARCA_LISTED_KQ", "ARCA_LISTED_RZ")
           cpu          = 1
           index        = 0
           max_sessions = 18
           max_symbols  = 100000
           max_firms    = 8000
           max_orders   = 2000000
       }
       fhArcaOTC = {
           lines        = ("ARCA_OTC_AC", "ARCA_OTC_DJ", "ARCA_OTC_KQ", "ARCA_OTC_RZ")
           cpu          = 0
           index        = 1
           max_sessions = 18
           max_symbols  = 100000
           max_firms    = 8000
           max_orders   = 1000000
       }
       fhArcaETF = {
           lines        = ("ARCA_ETF_AM", "ARCA_ETF_NZ")
           cpu          = 2
           index        = 2
           max_sessions = 18
           max_symbols  = 100000
           max_firms    = 8000
           max_orders   = 2000000
       }
       fhArcaBB = {
           lines        = ("ARCA_BB_AZ")
           cpu          = 0
           index        = 3
           max_sessions = 2
           max_symbols  = 100000
           max_firms    = 8000
           max_orders   = 1000000
       }
    }
    # individual line configurations
    # line names must match to those used in the process description section for correct process to line mapping
    # A line must have a primary configuration and may have a secondary configuration
    # If a line has both a primary and a secondary (Highly recommended) there is no assumptions about precedence
    #  of packet arrival times.
    # address is the IP address of the multicast group transmitted from the exchange
    # port is the port of the multicast group transmitted from the exchange
    # interfaces is the local server port which will receive the multicast group
    # enable is used to temporarily enable/disable reception of a multicast group as opposed to removing it from
    #   the configuration
    # fast indicates whether the multicast group(s) are fast encoded.
    #   Both side of a line must have the same gender as regards to fast encoding
    #   This tells the line handler whether or not these multicast groups are fast encoded or not
    # The multicast addresses used are those adevertised by the exchange in the Arca Book specification
    lines = {
        ARCA_LISTED_AC = {
            primary            = { address:"224.1.2.128"   port:13000  interface:eth2  enable:yes }
            secondary          = { address:"224.1.2.168"   port:14000  interface:eth3  enable:yes }
            fast               = no
        }
        ARCA_LISTED_DJ = {
            primary            = { address:"224.1.2.128"   port:13001  interface:eth2  enable:yes }
            secondary          = { address:"224.1.2.168"   port:14001  interface:eth3  enable:yes }
            fast               = no
        }
        ARCA_LISTED_KQ = {
            primary            = { address:"224.1.2.128"   port:13002  interface:eth2  enable:yes }
            secondary          = { address:"224.1.2.168"   port:14002  interface:eth3  enable:yes }
            fast               = no
        }
        ARCA_LISTED_RZ = {
            primary            = { address:"224.1.2.128"   port:13003  interface:eth2  enable:yes }
            secondary          = { address:"224.1.2.168"   port:14003  interface:eth3  enable:yes }
            fast               = no
        }

        ARCA_OTC_AC = {
            primary            = { address:"224.1.2.129"   port:13004  interface:eth2  enable:yes }
            secondary          = { address:"224.1.2.169"   port:14004  interface:eth3  enable:yes }
            fast               = no
        }
        ARCA_OTC_DJ = {
            primary            = { address:"224.1.2.129"   port:13005  interface:eth4  enable:yes }
            secondary          = { address:"224.1.2.169"   port:14005  interface:eth5  enable:yes }
            fast               = no
        }
        ARCA_OTC_KQ = {
            primary            = { address:"224.1.2.129"   port:13006  interface:eth4  enable:yes }
            secondary          = { address:"224.1.2.169"   port:14006  interface:eth5  enable:yes }
            fast               = no
        }
        ARCA_OTC_RZ = {
            primary            = { address:"224.1.2.129"   port:13007  interface:eth4  enable:yes }
            secondary          = { address:"224.1.2.169"   port:14007  interface:eth5  enable:yes }
            fast               = no
        }

        ARCA_ETF_AM = {
            primary            = { address:"224.1.2.130"   port:13008  interface:eth4  enable:yes }
            secondary          = { address:"224.1.2.170"   port:14008  interface:eth5  enable:yes }
            fast               = no
        }
        ARCA_ETF_NZ = {
            primary            = { address:"224.1.2.130"   port:13009  interface:eth4  enable:yes }
            secondary          = { address:"224.1.2.170"   port:14009  interface:eth5  enable:yes }
            fast               = no
        }
        ARCA_BB_AZ = {
            primary            = { address:"224.1.2.252"   port:19012  interface:eth3  enable:yes }
            secondary          = { address:"224.1.2.255"   port:20012  interface:eth5  enable:yes }
            fast               = no
        }
    }
    # NOTES: Sizing of symbol tables and order tables - The specification indicates how a single symbol table
    #   may be configured that spans lines and exchanges. We have chosen to use a symbol table per session.
    #   Fault tolerance of the feeds from an exchange are on a session basis and we may need to restart one line
    #   but not others. If we have a single symbol table, this becomes a high latency operation. By maintaining
    #   a symbol table per session, we can support the unaffection sessions without any latency loss while
    #   re-starting the affected session expeditiously. A similar argument applies to order tables and firm tables.
    #
    # Supporting Arca Book main feeds, Arca Book periodic refresh feeds, and Arca Trade.
    #   In theory Arca Book main feeds and periodic refresh feeds could be supported in the same process but
    #   it has not been tested this way and is not recommended. There is no functional support for synchronizing
    #   Arca Book main feed lines with their associated periodic refresh feed lines. The recommended method is
    #   to support Arca Book main feed lines in process(es) that are dedicated to them and similarly to support
    #   Arca Book periodic refresh feed lines and Arca Trade main feed lines in process(es) that are specific to
    #   each type. That is how they were tested prior to delivery.
}
